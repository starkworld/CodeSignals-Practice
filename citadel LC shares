class Solution{

public:

    vector<int>shares (vector<vector<int>> bids, int totalShares){

        vector<int> ans;
        vector<vector<int>> v;

        for(int i=0;i<bids.size();i++)
            v.push_back({-bids[i][2],bids[i][3],bids[i][0],bids[i][1]});

        sort(v.begin(),v.end());
        for(int i=0;i<v.size();i++){
            if(totalShares>0)  totalShares-=min(totalShares,v[i][3]);
            else  ans.push_back(v[i][2]);
        }
        return ans;
    }
};

int main(void){

    Solution *s=new Solution;
    auto a=s->shares({{1,5,5,0},{2,7,8,1},{3,7,5,1},{4,10,3,3}},18);
    for(int id:a)cout<<id<<" ";cout<<endl;

    return 0;
}
// output: 4